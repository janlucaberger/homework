{"version":3,"sources":["webpack/bootstrap c1e1b8e989a2ef5f02d8","./js/main.js","./js/view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;AC7DA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;ACPD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,QAAQ;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c1e1b8e989a2ef5f02d8","/* globals $ */\n\nvar View = require(\"./view\");\n\n$(function () {\n  var $easel = $(\"#easel\");\n  new View($easel);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 1\n// module chunks = 0","/* jshint esversion: 6 */\n\nfunction View($el) {\n\tthis.$el = $el;\n\tthis.setupEasel();\n}\n\nwindow._randomColorString = function () {\n\treturn '#' + Math.random()\n\t\t.toString(16)\n\t\t.substr(-6);\n};\n\nView.prototype.exercise0 = function () {\n\t//Challenge: (example) remove the 'square' class from every li\n\t//Result: this should cause the grid to turn into a long list of undecorated lis\n\t//just a list of dots\n\n\t//this one completed as an example :) no additional code necessary\n\t$('li').removeClass(\"square\");\n};\n\nView.prototype.exercise1 = function () {\n\t//Challenge: Give every square the class 'orange'\n\t//Result: Every square should turn orange (we already have a CSS rule)\n\n\t//your code here!\n\t$(\"li\").addClass(\"orange\");\n};\n\nView.prototype.exercise2 = function () {\n\t//Challenge: Remove every square\n\t//Result: Every square vanishes\n\n\t//your code here!\n\t$(\".square\").remove()\n};\n\nView.prototype.exercise3 = function () {\n\t//Challenge: Add an <h1> with the text 'i love jquery' under the grid.\n\t//Result: An <h1> with the text 'i love jquery' appears under the grid.\n\n\t//your code here!\n\t$(\"#easel\").append(\"<h1>i love jquery</h1>\")\n};\n\nView.prototype.exercise4 = function () {\n\t//Challenge: Write your first name in every other square.\n\t//Result: Your name appears in every other square.\n\n\t//your code here!\n\t$(\".square:nth-child(even)\").text(\"Jan-Luca\");\n};\n\nView.prototype.exercise5 = function () {\n\t//Challenge: Alert the row and column of the square, when the square is clicked.\n\t//Result: When a square is clicked, the row and column appear in an alert. for\n\t//example: clicking the top left square should alert '0, 0'.\n\n\t//hint: checkout the addRow function at the bottom of the file: we set the\n\t//  'data-pos' of every square\n\n\t//your code here!\n};\n\nView.prototype.exercise6 = function () {\n\t//Challenge: Give every square a random color!\n\t//Result: Every square becomes a color as soon as this code runs. The grid\n\t//should become a beautiful rainbow of colors.\n\n\t//hint: use window._randomColorString() (defined at top) to get a random color!\n\t$('li').each(function () {\n\t\t$(this).css(\"background-color\", window._randomColorString)\n\t})\n\t//your code here!\n};\n\nView.prototype.exercise7 = function () {\n\t//Challenge: When your mouse goes over a square, console log its color.\n\t//Result: When the mouse goes over a square its color should appear in the\n\t//console. The color won't be the color's name, but its rbg value.\n\t//You should push the button for exercise 6 first to try it on the\n\t//rainbow.\n\n\t//your code here!\n\t$(\"li\").on(\"mouseenter\", (e) => {\n\t\tconst $square = $(e.currentTarget)\n\t\tconsole.log($square.css(\"background-color\"))\n\t})\n};\n\n\n\nView.prototype.setupEasel = function () {\n\tconst $addRowButton = $('<button>')\n\t\t.html('Add a row');\n\tthis.$el.append($addRowButton);\n\t$addRowButton.on(\"click\", this.addRow.bind(this));\n\n\tfor (let j = 0; j <= 7; j++) {\n\t\tconst $button = $(\"<button>\")\n\t\t\t.html(\"Exercise \" + j);\n\t\t$button.on(\"click\", this[\"exercise\" + j]);\n\t\tthis.$el.append($button);\n\t}\n\n\tfor (let i = 0; i < 20; i++) {\n\t\tthis.addRow();\n\t}\n};\n\nView.prototype.addRow = function () {\n\tconst rowIdx = this.$el.find(\".row\")\n\t\t.length;\n\tconst $row = $(\"<ul>\")\n\t\t.addClass(\"row\")\n\t\t.addClass(\"group\");\n\tfor (let colIdx = 0; colIdx < 20; colIdx++) {\n\t\tconst $square = $(\"<li>\")\n\t\t\t.addClass(\"square\")\n\t\t\t.attr(\"data-pos\", [rowIdx, colIdx]);\n\t\t$square.on(\"mouseenter\", (e) => {\n\t\t\tconst $square = $(e.currentTarget);\n\t\t\t$square.css(\"background-color\", window._randomColorString());\n\t\t});\n\t\t$row.append($square);\n\t}\n\tthis.$el.append($row);\n};\n\nmodule.exports = View;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/view.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}